<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Playlist</title>
    <style>
        body {
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
        }
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }
        .playlist {
            width: 100%;
            max-width: 800px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-top: 20px;
        }
        .player {
            width: 100%;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f5f5f5;
            cursor: pointer;
        }
        .custom-player {
            display: flex;
            align-items: center;
            gap: 10px;
            width: 100%;
            max-width: 640px;
        }
        .time-bar {
            width: 100%;
            height: 5px;
            background-color: #ddd;
            position: relative;
            cursor: pointer;
            border-radius: 5px;
        }
        .time-bar .progress {
            height: 100%;
            background-color: #2196F3;
            width: 0;
            border-radius: 5px;
        }
        .volume-slider {
            width: 100px;
        }
        .time-display {
            font-size: 14px;
        }
        .song-info {
            text-align: center;
            margin-top: 10px;
            font-size: 16px;
            display: none;
        }
        .button {
            background-color: #2196F3;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 8px;
        }
        .button:hover {
            background-color: #1976D2;
        }
        .header {
            width: 100%;
            max-width: 800px;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="player">
            <div class="custom-player">
                <button id="play-pause" onclick="togglePlayPause()">&#9658;</button> <!-- Play symbol -->
                <div class="time-bar" onclick="seek(event)">
                    <div class="progress"></div>
                </div>
                <span class="time-display" id="time-display">0:00 / 0:00</span>
                <span>&#128266;</span> <!-- Volume symbol -->
                <input type="range" class="volume-slider" min="0" max="100" value="100" onchange="setVolume(this.value)">
            </div>
            <div id="player"></div>
            <div class="song-info" id="song-info">Artist - Song Name</div>
        </div>
        <div class="header">
            <h1>Playlist: <%= playlist.name %></h1>
        </div>
        <div class="playlist">
            <table>
                <thead>
                    <tr>
                        <th>Song Name</th>
                        <th>Artist</th>
                    </tr>
                </thead>
                <tbody>
                    <% playlist.songs.forEach(song => { %>
                        <tr onclick="playSong('<%= song.url %>', '<%= song.artist %>', '<%= song.title %>')">
                            <td><%= song.title %></td>
                            <td><%= song.artist %></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
    <br><br>
    <a href="/playlists" class="button">Back to Playlists</a>
    <a href="/auth/logout" class="button">Logout</a>

    <script src="https://www.youtube.com/iframe_api"></script>
    <script>
        let player;
        let isPlaying = false;

        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '0',
                width: '0',
                videoId: '',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        function onPlayerReady(event) {
            console.log('Player is ready');
        }

        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING) {
                isPlaying = true;
                document.getElementById('play-pause').innerHTML = '&#10074;&#10074;'; // Pause symbol
                updateProgress();
            } else {
                isPlaying = false;
                document.getElementById('play-pause').innerHTML = '&#9658;'; // Play symbol
            }
        }

        function togglePlayPause() {
            if (isPlaying) {
                player.pauseVideo();
            } else {
                player.playVideo();
            }
        }

        function setVolume(volume) {
            player.setVolume(volume);
        }

        function seek(event) {
            const timeBar = document.querySelector('.time-bar');
            const progress = document.querySelector('.time-bar .progress');
            const rect = timeBar.getBoundingClientRect();
            const offsetX = event.clientX - rect.left;
            const percentage = offsetX / timeBar.offsetWidth;
            const newTime = player.getDuration() * percentage;
            player.seekTo(newTime, true);
            progress.style.width = `${percentage * 100}%`;
        }

        function updateProgress() {
            const progress = document.querySelector('.time-bar .progress');
            const currentTime = player.getCurrentTime();
            const duration = player.getDuration();
            const percentage = (currentTime / duration) * 100;
            progress.style.width = `${percentage}%`;

            const currentMinutes = Math.floor(currentTime / 60);
            const currentSeconds = Math.floor(currentTime % 60);
            const durationMinutes = Math.floor(duration / 60);
            const durationSeconds = Math.floor(duration % 60);

            document.getElementById('time-display').innerText = `${currentMinutes}:${currentSeconds.toString().padStart(2, '0')} / ${durationMinutes}:${durationSeconds.toString().padStart(2, '0')}`;

            if (isPlaying) {
                requestAnimationFrame(updateProgress);
            }
        }

        function playSong(url, artist, title) {
            const videoID = extractYouTubeID(url);
            console.log('Playing song:', videoID, artist, title); // Debugging statement
            if (videoID) {
                player.loadVideoById(videoID);
                player.playVideo();
                const songInfo = document.getElementById('song-info');
                songInfo.innerText = `${artist} - ${title}`;
                songInfo.style.display = 'block';
            } else {
                console.error('Invalid YouTube URL:', url);
            }
        }

        function extractYouTubeID(url) {
            const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }

        function isYouTubeURL(url) {
            const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
            return regex.test(url);
        }

        // Ensure the YouTube IFrame API is loaded before initializing the player
        if (typeof YT === 'undefined' || typeof YT.Player === 'undefined') {
            const tag = document.createElement('script');
            tag.src = 'https://www.youtube.com/iframe_api';
            const firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        } else {
            onYouTubeIframeAPIReady();
        }
    </script>
</body>
</html>